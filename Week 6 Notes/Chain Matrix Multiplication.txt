Code: Chain Matrix Multiplication
Recursive algorithm
T = dict()

def matrix_mult(m, i, j):
    if (i, j) not in T:
        if j == i + 1:
            T[i, j] = 0
        else:
            T[i, j] = float("inf")
            for k in range(i + 1, j):
                T[i, j] = min(T[i, j], matrix_mult(m, i, k) + matrix_mult(m, k, j) + m[i] * m[j] * m[k])


Iterative algorithm
def matrix_mult(m):
    n = len(m) - 1
    T = [[float("inf")] * (n + 1) for _ in range(n + 1)]

    for i in range(n):
        T[i][i + 1] = 0

    for s in range(2, n + 1):
        for i in range(n - s + 1):
            j = i + s

